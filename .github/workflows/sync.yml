name: Sync Fork and Publish

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight every day
  push:
    branches:
      - master

jobs:
  sync-and-publish:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Add upstream remote
      run: git remote add upstream https://github.com/markdown-it/markdown-it.git

    - name: Fetch updates from upstream
      run: git fetch upstream

    - name: Check if version updated
      id: version_check
      run: |
        VERSION_MAIN=$(git show upstream/master:package.json | jq -r '.version')
        VERSION_HEAD=$(jq -r '.version' package.json)
        if [ "$VERSION_MAIN" = "$VERSION_HEAD" ]; then
          echo "Version has not been updated in package.json"
          echo "::set-output name=version_updated::false"
        else
          echo "::set-output name=version_updated::true"
        fi

    - name: Merge updates
      run: git merge upstream/master
      continue-on-error: true

    - name: Check for conflicts
      run: |
        if git diff --name-only --diff-filter=U | grep -Ev '^README\.md$|^.github/' ; then
          echo "Conflicts found outside of allowed files. Exiting."
          exit 1
        fi

    - name: Resolve specific conflicts
      run: git checkout --ours README.md .github/*

    - name: Commit changes
      run: |
        git add -A
        set +e  # Disable error stopping
        git commit -m "Merge upstream changes"
        commit_status=$?
        set -e  # Re-enable error stopping
        if [ $commit_status -ne 0 ]; then
          git_status=$(git status)
          if [[ $git_status == *"nothing to commit"* ]]; then
            echo "No changes to commit. Exiting with success."
            # exit 0
          else
            echo "Error during commit. Exiting with failure."
            exit 1
          fi
        fi
        git push

    - name: Update package.json
      if: steps.version_check.outputs.version_updated == 'true'
      run: |
        jq '.name = "markdown-it-for-mdvc" | .description = "A custom version of markdown-it for mdvc" | .repository = "YouXam/markdown-it-for-mdvc" | .scripts.prepublishOnly = "echo skip"' package.json > package.json.new
        mv package.json.new package.json

    - name: Test and build
      if: steps.version_check.outputs.version_updated == 'true'
      run: |
        npm install
        npm run build

    - name: Setup Node.js
      if: steps.version_check.outputs.version_updated == 'true'
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Publish to NPM
      if: steps.version_check.outputs.version_updated == 'true'
      run: |
        npm ci
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
